version: '3.8'

services:
  # Aplicação Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: pontoeletronico:latest
    container_name: pontoeletronico-app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./public/uploads:/var/www/html/public/uploads
    ports:
      - "${APP_PORT:-8000}:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pontoeletronico-network
    labels:
      - "com.pontoeletronico.app=main"
      - "com.pontoeletronico.version=1.0"

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: pontoeletronico-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - pontoeletronico-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    labels:
      - "com.pontoeletronico.service=database"

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: pontoeletronico-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-null}
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - pontoeletronico-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.pontoeletronico.service=cache"

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    image: pontoeletronico:latest
    container_name: pontoeletronico-queue
    restart: unless-stopped
    command: php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - app
      - redis
      - db
    networks:
      - pontoeletronico-network
    labels:
      - "com.pontoeletronico.service=queue-worker"

  # Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: pontoeletronico:latest
    container_name: pontoeletronico-scheduler
    restart: unless-stopped
    command: bash -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - app
      - redis
      - db
    networks:
      - pontoeletronico-network
    labels:
      - "com.pontoeletronico.service=scheduler"

  # PhpMyAdmin (Opcional - Somente para desenvolvimento/staging)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: pontoeletronico-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 100M
    ports:
      - "${PMA_PORT:-8080}:80"
    depends_on:
      - db
    networks:
      - pontoeletronico-network
    profiles:
      - debug
    labels:
      - "com.pontoeletronico.service=phpmyadmin"

networks:
  pontoeletronico-network:
    driver: bridge
    name: pontoeletronico-network

volumes:
  db-data:
    driver: local
    name: pontoeletronico-db-data
  redis-data:
    driver: local
    name: pontoeletronico-redis-data
